file name as class name with main()

x.class-----------> with the help of class loader system it is loaded in jvm this in loading---->class related information in loaded in method area of jvm

In jvm
-----> verification(check syntax)----->preparation(initialize static variables)-------->resolve----->initialize(creating object)
obkject related information stored in heap  area

method information in java stack


==============================================================================================================================================================

Class->collection of objects with common properties and behaviour 
object->real world entity

UML->unified modelling laguage
purpose->draw the class diagram
symbol		Meaning 
======		=======
rectangle	class
_______>	extend

<<   >>		interface
________	implements

+		public
-		private
#		protected
		default
===============================================================================================================================================================

1)encaptulation---->binding of data and method together(we can get access to methods and variables only by craeting and object of the class)
2)polymorphism
	static---->method overloading

	dynamic----->method overiding---->same method name in differnt class(inherited) but differnt body
3)inheritance--->acquring the property of one class into another class
	-single 
	-multilevel
	-hierarchial
	-multiple --->not defined in java beacause of ampiguity problem(because we cannot define the particular class from where we are getting property

4)Abstraction
5)dynamic binding------>decides at runtime which object which method to be called.
class y extends x(y is child of x)
===============================================================================================================================================================


constructor--->no void no return because it return call itself
work----->create instance or object of a class
		at the time of creating the object intialize the object to a initial common value
multiple constructers can be created by function overloading

===============================================================================================================================================================



Abstaraction
============

1.Abstract method----->method without body
2.Abstract class------>The class with atleats one abstract method

Restriction------>Cannot create an object of the abstract class
==============================================================================================================================================================

INTERFACE---------->Contract between the implemented class and client code.

Abstract class							Interface

1.Atleast one method is abstract			1.All methods are abtract
2.It is extended					2.It is implemented
3.It doesnot support overcome		diff		3.It overcome multiple inheritane
multiple inheritance

Similarities
1.Cant create the object of interface and abstract class

==============================================================================================================================================================
Nested class

class x
{
	class y
		{}
}

1.static nested class
2.non static nested class-------->called inner class

Restrict--->outer class variable are accesssible to inner class
		inner class variable are not accessible to outer class
		we cannot create object of inner class outside the outer class


=============================================================================================================================================================




Modifier------->tells how a member of a class is being accesssed to another class.

public....private(accessible in same class only)......protected(in same class and child only even in different package-).......default---------->access specifier
static....final......abstract.........synchronized




==============================================================================================================================================================
Satic--->it is used by itself

no need to create object......directly accsessed by class name

static int x=5;-----.STATIC VARIABLE ARE GLOBAL VARIABLE AND SIMILARLY GLOBAL METHOD THAT IS IT CAN BE ACCESSESD ANYWHERE
classname.X

Restriction----->Static member are accessable in static method ONLY

=============================================================================================================================================================


static
{


};
----->static block executes first and only once.

===============================================================================================================================================================

final ------>we cannot modify/overwrite the function or variable
final class---->cannot be inherited
================================================================================================================================================================




								EXCEPTION	
								==========
Exception vs error
error--->no handler so program terminated
excepion--->which is handled by the program


Exception is an event which occur during the execution of a program to prevent the abnormal termination of the program.
Exception is a class is java
when exception occurs it throws a exception object contaning details of the exception occured---->handeed over to jvm---->within jvm methods (called stack )
															  which handle the exception
														      this piece of code is called exception handler

Types of exception
------------------
1.Checked Exception---->must be handled by programmer
2.Unchecked Exception--->no need to handler by programmer



Object(superclass of java) present by default inside java.lang
Object class--->throwable class------>Exception class----->Checked-->classNotFound,IOException,
								Unchecked--->RuntimeException(Airthmetic,ArrayOutOfBound)
			       ------>Error class----->jvm error(not performing),awt error(toolkit in java)



Exception is handled by five keywords--->try,Catch,finally,
					User defined Exception---->throws,throw



try-catch
--------
no use of writing super class catch above subclass catch because it will search from beginning for the handler
finally---->execute this block whether exception occurs or not



User_defined Exception
-----------------------
throw--->to throw user defined Exception(user defined Exception must be the subclass of Exception)---->It is a checked type of exception
==================================================================================================================================================================
==================================================================================================================================================================


MULTI THREADING
...............

MULTI PROCESSING----->MULTIPLE PROCESS ARE RUNNING SIMULTANEOUSLY
MULTI TASKING-------->MULTILE APPLICATIONS/TASKS RUNNING SIMULTANEOUSLY
MULTI THREADING------>Single document being used parallely
			eg.tabs in the same browser
			eg.printing and editing word document at the same time
			THREAD--->Smallest unit of despatchable code----->it is a class in java
			Multiple thread running simultaneously---->Multiple threading


STAGES
.......
1.Ready----->creation of thread not running
2.start()---->run()--->Running stage
3.stop()----->Dead stage
4.sleep()----->Sleeping stage(not working)---->after some time it becomes ready state
5.wait()------>waiting state---->notify()--->ready state

CREATION OF THREAD
------------------
Two ways:
1)EXTENDING THE THREAD CLASS
2)BY IMPLEMENTING RUNNING INTERFACE

PRIORITY(time to be spent in a pariticular process)  1-10
---------
1.MAX(10)
2.MIN(1)
3.NORM-By default(5)


thread is executing same process parallely  


1.SHARED RESOURCE---->same resorce shared by multiple processess
2.SYNCHRONIZATION---->one process access shared resource at a time others wait
		eg.multiple person accessing same account then only one is given access others are waiting
3.MUTEX(MUTUALLY EXCLUSIVE BLOCK)--->2 is possible by applying lock
4.CRITICAL SECTION---->the situation 3 is called a critical situation 
5.DeaDLOCK--->when the resouce 1(used by process 1) is asked by procees 2 and vice versa




Producer Consumer Problem
---------------------------



===================================================================================================================================================================
===================================================================================================================================================================


COLLECTION
-----------
an object containing lot of objects (elements) is called a collection
it is contained in java.util.* package--->it conatins lot of classes and interfaces applied on collection

 These are classes in util Applied to a collection
----------------------------
1)allow duplicate value 
   ''arraylist(unsynchronized-fast) and 
   ''vector(sunchronized) 
2)set doesnot allow duplicate
	''HashSet->(random order)
	''LinkedHashSet->given Order
	''TreeSet->alphabetical order

=======================================================
Map--->not a c
ollection but belongs to java.util becoz it is not subinterface of collection interfece
we store key and value at a time
Therfore map contains key and value pairs(key are not dublicated)(values may be duplicated)


=============================================================
POJO CLASS

SETTER()====set the value
GETTER()====get the vaue


=================================================================================================================================================================
CONSOLE INPUT OUTUT

STREAM VARIABLE
STREAM==WHICH IS CONNECTED TO PHYSICAL DEVICE


THREE STREAM VARIABLE====>IN,OUT,ERR
-------------------

BUFFEREDREADER SCANNER

Scanner sc=new Scanner(system.in);//in is the stream variable containing input which is passed to scanner object















































































































+lengthdouble=100.00
+widthdouble=200.00
+heightdouble=300.00
+volume()
